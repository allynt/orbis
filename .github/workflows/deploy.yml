name: Deploy

on:
  deployment: {}


jobs:
  deploy-to-testing:
    name: Deploy to Testing
    runs-on: [self-hosted, testing-deployer]
    if: startsWith(github.event.deployment.environment, 'testing')
    steps:
      - name: Set the Deployment Status to Pending
        uses: 'deliverybot/deployment-status@v1'
        with:
          state: 'pending'
          token: '${{ github.token }}'

      - name: Checkout
        uses: actions/checkout@v1

      - name: Setup AWS config
        run: |
          aws configure set aws_access_key_id "${{ secrets.AWS_ACCESS_KEY_ID }}"
          aws configure set aws_secret_access_key "${{ secrets.AWS_SECRET_ACCESS_KEY }}"
          aws configure set --profile testing role_arn "${{ secrets.ROLE }}"
          aws configure set --profile testing source_profile default

      - name: Deploy the app
        run: |
          ENVIRONMENT="${{ github.event.deployment.environment }}"
          TAG="${GITHUB_SHA:0:7}"
          BRANCH="${GITHUB_REF##*/}"
          BRANCH_SLUG="$(echo "${BRANCH}" | sed -e 's/[^[:alnum:]]/-/g' | tr A-Z a-z)"
          TERRAFORM_WORKSPACE="environment-${ENVIRONMENT}"

          echo "ENVIRONMENT=$ENVIRONMENT"
          echo "TAG=$TAG"
          echo "BRANCH=$BRANCH"
          echo "BRANCH_SLUG=$BRANCH_SLUG"

          cd terraform/deploy-branch-to-testing

          terraform init
          terraform workspace new "$TERRAFORM_WORKSPACE" || true
          terraform workspace select "$TERRAFORM_WORKSPACE"
          terraform plan -var "app_environment=$ENVIRONMENT" -var "tag=$TAG" -var "aws_cli_profile=testing" -out=deploy.plan
          terraform apply -auto-approve ./deploy.plan

      - name: Set the Deployment Status on Success
        if: success()
        uses: 'deliverybot/deployment-status@v1'
        with:
          state: 'success'
          token: '${{ github.token }}'
          environment-url: 'https://app-${{github.event.deployment.environment}}.testing.or3is.com/'

      - name: Set the Deployment Status on Failure
        if: failure()
        uses: 'deliverybot/deployment-status@v1'
        with:
          state: 'failure'
          token: '${{ github.token }}'
