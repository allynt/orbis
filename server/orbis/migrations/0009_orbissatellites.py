# Generated by Django 2.2 on 2020-03-03 14:56

from django.conf import settings
import django.contrib.gis.db.models.fields
import django.contrib.postgres.fields.jsonb
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import orbis.models.models_satellites


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('orbis', '0008_orbisuserprofile_maxes'),
    ]

    operations = [
        migrations.CreateModel(
            name='Satellite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('satellite_id', models.SlugField(help_text='A unique id for the satellite.', unique=True, validators=[orbis.models.models_satellites.validate_satellite_id])),
                ('title', models.CharField(help_text='A pretty display name for the satellite.', max_length=128)),
                ('description', models.TextField(blank=True, help_text='A description of the satellite.', null=True)),
                ('order', models.IntegerField(default=1, help_text='The order to render the satellite.')),
            ],
            options={
                'verbose_name': 'Satellite',
                'verbose_name_plural': 'Satellites',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='SatelliteResolution',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.SlugField(help_text='A unique name for the resolution.', unique=True)),
                ('title', models.CharField(help_text='A pretty display name for the resolution.', max_length=128)),
                ('description', models.TextField(blank=True, help_text='A description of the resolution.', null=True)),
                ('order', models.IntegerField(default=1, help_text='The order to render the satellite.')),
            ],
            options={
                'verbose_name_plural': 'Satellite Resolutions',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='SatelliteVisualisation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('visualisation_id', models.SlugField(help_text='A unique id for the visualisation.', unique=True)),
                ('title', models.CharField(help_text='A pretty display name for the visualisation.', max_length=128)),
                ('description', models.TextField(blank=True, help_text='A description of the visualisation.', null=True)),
                ('order', models.IntegerField(default=1, help_text='The order to render the visualisation.')),
                ('thumbnail', models.FileField(blank=True, help_text='A thumbnail image representing this bookmark.', null=True, upload_to=orbis.models.models_satellites.visualisation_thumbnail_path)),
            ],
            options={
                'verbose_name_plural': 'Satellite Visualisations',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='SatelliteSearch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, help_text='When the search was first created.')),
                ('name', models.CharField(max_length=128)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('aoi', django.contrib.gis.db.models.fields.PolygonField(srid=4326)),
                ('owner', models.ForeignKey(help_text='The owner of this search.', on_delete=django.db.models.deletion.CASCADE, related_name='satellite_searches', to=settings.AUTH_USER_MODEL)),
                ('resolutions', models.ManyToManyField(blank=True, related_name='searches', to='orbis.SatelliteResolution')),
                ('satellites', models.ManyToManyField(related_name='searches', to='orbis.Satellite')),
            ],
            options={
                'verbose_name': 'Saved Satellite Search',
                'verbose_name_plural': 'Saved Satellites Searches',
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='SatelliteResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scene_id', models.SlugField(help_text='A unique id for the scene.')),
                ('thumbnail', models.URLField(blank=True, help_text="The location of this scene's thumbnail; This is an external URL so it is not managed by the app.", null=True)),
                ('cloud_cover', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(100.0)])),
                ('footprint', django.contrib.gis.db.models.fields.PolygonField(srid=4326)),
                ('properties', django.contrib.postgres.fields.jsonb.JSONField(blank=True, help_text='Some more information to associate with the scene.', null=True, validators=[orbis.models.models_satellites.validate_properties])),
                ('owner', models.ForeignKey(help_text='The owner of this search result.', on_delete=django.db.models.deletion.CASCADE, related_name='satellite_results', to=settings.AUTH_USER_MODEL)),
                ('satellite', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scenes', to='orbis.Satellite')),
            ],
            options={
                'verbose_name': 'Saved Satellite Result',
                'verbose_name_plural': 'Saved Satellite Results',
            },
        ),
        migrations.AddField(
            model_name='satellite',
            name='resolutions',
            field=models.ManyToManyField(blank=True, related_name='satellites', to='orbis.SatelliteResolution'),
        ),
        migrations.AddField(
            model_name='satellite',
            name='visualisations',
            field=models.ManyToManyField(blank=True, related_name='satellites', to='orbis.SatelliteVisualisation'),
        ),
        migrations.AddConstraint(
            model_name='satellitesearch',
            constraint=models.UniqueConstraint(fields=('owner', 'name'), name='unique_owner_name'),
        ),
        migrations.AddConstraint(
            model_name='satelliteresult',
            constraint=models.UniqueConstraint(fields=('scene_id', 'satellite'), name='unique_satellite_scene'),
        ),
    ]
